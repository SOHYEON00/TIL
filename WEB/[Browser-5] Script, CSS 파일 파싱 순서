# Script, CSS 파일 파싱 순서

웹은 파싱과 실행이 순서대로 진행되는 **동기화 모델**이다.

## Script 파싱 순서
- html 파싱 도중, `<script>` 태그를 만나면, 파싱을 멈추고 스크립트 파일 실행을 기다림
- 스크립트 파일 실행 동안, html 문서 파싱은 중지됨
- 만약 스크립트가 외부에 있는 경우,
-> 네트워크로 자원을 가져와야 함.
이 또한 실시간으로 동기적으로 처리되므로 파싱은 중지됨.
	- 이 때, 스크립트를 `지연(defer)`로 표시하게 되면 문서 파싱은 중단되지 않고 파싱이 완료된 이후에 스크립트가 실행됨.
    
- HTML5는 스크립트를 비동기적으로 처리하는 속성을 추가하여, 맥락에 의해 파싱되고 실행됨.

Q. HTML5가 스크립트 파일 파싱하는 법

## 예측 파싱 (Speculative parsing)
- 웹킷과 파이어폭스가 지원하는 최적화 방식 중 하나

### 동작 방식
: 스크립트 파일 실행 동안, 다른 스레드는 네트워크로부터 다른 자원을 찾아 내려받고 문서의 나머지 부분을 파싱한다.

### 장점
- 자원을 병렬로 연결해 받아 전체적인 속도 개선

### 특징
- DOM 트리를 수정하지 않고 메인 파서의 일로 넘김. 
-> 예측 파서는 참조된 외부 자원을 파싱한다.
ex) 외부 스크립트, 외부 스타일 시트, 외부 이미지

## 스타일 시트 css file

### 이론적인 실행 순서
이론적으로 스타일 시트는 DOM 트리를 변경하지 않으므로 문서 파싱을 기다리지 않는다.
### 문제 발생 경우
하지만 문제가 발생할 수 있는 경우가 있는데, **스크립트 파일에서 스타일 정보를 가져오는 경우**가 이러하다. 이 때, 스타일이 파싱되지 않은 상황이라면 스크립트가 잘못된 결과를 내놓기 때문에 많은 문제를 야기한다.

### 해결 방법
- 파이어폭스
아직 로드, 파싱 중인 스타일 시트가 있는 경우, 모든 스크립트 실행을 중지함. 
- 웹킷
로드되지 않은 스타일 시트 중, 문제가 될만한 속성이 있는 경우에만 스크립트 중지함.

---
### 결론
- DOM 트리를 변경하는 파일의 실행 경우에만 문서의 파싱이 중단된다.
    - script: DOM 트리 변경 O
    - style sheet: (이론적으론) DOM 트리 변경 X
<br/>

- HTML5는 비동기적으로 스크립트 파일을 파싱한다.
<br/>

- 웹킷과 파이어폭스는 `예측 파싱`을 통해 외부 자원을 문서 파싱과 병렬적으로 처리하여 속도를 개선한다.
<br/>

